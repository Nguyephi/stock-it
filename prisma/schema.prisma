// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  USER
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime? 
  image         String?
  password      String?
  role          UserRole  @default(USER)
  accounts      Account[]
  sessions      Session[]
  printify      Printify[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  id         String        @id @default(cuid())
  email      String
  token      String        @unique
  expires    DateTime
 
  @@unique([email, token])
}

model PasswordResetToken {
  id         String        @id @default(cuid())
  email      String
  token      String        @unique
  expires    DateTime
 
  @@unique([email, token])
}

model Printify {
  id           String   @id @default(cuid())
  userId       String   @unique
  shopId       Int
  accessToken  String   
  refreshToken String    
  expiresAt    DateTime 
  storeData    Json?     
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
 
model EtsyOAuthState {
  id           String   @id @default(uuid())
  state        String   @unique
  codeVerifier String
  userId       String   @unique
  createdAt    DateTime @default(now())
  expiresAt    DateTime

  @@index([state], map: "idx_state")
  @@index([userId], map: "idx_userId")
}